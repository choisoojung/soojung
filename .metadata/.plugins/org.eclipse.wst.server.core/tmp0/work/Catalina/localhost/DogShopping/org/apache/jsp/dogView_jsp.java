/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-11-04 02:15:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.DogVO;

public final class dogView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vo.DogVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

   DogVO dogVO = (DogVO)request.getAttribute("dogVO");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("   #wrap{\r\n");
      out.write("      width : 800px;\r\n");
      out.write("      margin : auto;\r\n");
      out.write("   }\r\n");
      out.write("   #top{\r\n");
      out.write("      height : 150px;\r\n");
      out.write("      background : orange;\r\n");
      out.write("   }\r\n");
      out.write("   #main{\r\n");
      out.write("      margin-top : 10px;\r\n");
      out.write("   }\r\n");
      out.write("   #main_left{\r\n");
      out.write("      height : 300px;\r\n");
      out.write("      width : 180px;\r\n");
      out.write("      background : green;\r\n");
      out.write("      float : left;\r\n");
      out.write("   }\r\n");
      out.write("   #main_right{\r\n");
      out.write("      height : 300px;\r\n");
      out.write("      width : 600px;\r\n");
      out.write("      background : yellow;\r\n");
      out.write("      margin-left: 10px;\r\n");
      out.write("      float : left;\r\n");
      out.write("   }\r\n");
      out.write("   #bottom{\r\n");
      out.write("      height: 150px;\r\n");
      out.write("      margin-top: 10px;\r\n");
      out.write("      background: gray;\r\n");
      out.write("   }\r\n");
      out.write("   .viewProductImage{\r\n");
      out.write("      height : 300px; \r\n");
      out.write("      width : 180px;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<section id=\"wrap\">\r\n");
      out.write("   <header id=\"top\">\r\n");
      out.write("      <h1>");
      out.print(dogVO.getDogKind() );
      out.write("개상품 정보</h1>\r\n");
      out.write("   </header>\r\n");
      out.write("   <section id=\"main\">\r\n");
      out.write("      <aside id=\"main_left\">\r\n");
      out.write("         <img src = \"images/");
      out.print(dogVO.getDogImage() );
      out.write(".jpg\" class = \"viewProductImage\"/>\r\n");
      out.write("      </aside>\r\n");
      out.write("      <section id=\"main_right\" style = \"font-size : xx-large\">\r\n");
      out.write("         <b>개 원산지 : </b>");
      out.print(dogVO.getDogCountry() );
      out.write("<br>\r\n");
      out.write("         <b>개 가격 : </b>");
      out.print(dogVO.getDogPrice() );
      out.write("<br>\r\n");
      out.write("         <b>개 신장 : </b>");
      out.print(dogVO.getDogHeight() );
      out.write("<br>\r\n");
      out.write("         <b>개 체중 : </b>");
      out.print(dogVO.getDogWeight() );
      out.write("<br>\r\n");
      out.write("         <b>개 설명 : </b>");
      out.print(dogVO.getDogContent() );
      out.write("<br>\r\n");
      out.write("      </section>\r\n");
      out.write("   </section>\r\n");
      out.write("   <div style=\"clear: both;\"></div>\r\n");
      out.write("   <footer id=\"bottom\">\r\n");
      out.write("      <h1>\r\n");
      out.write("         <a href=\"dogList.dog\">쇼핑계속하기</a>\r\n");
      out.write("         <a href=\"dogCartAdd.dog?id=");
      out.print(dogVO.getDogId());
      out.write("\">장바구니담기</a>\r\n");
      out.write("      </h1>\r\n");
      out.write("   </footer>\r\n");
      out.write("</section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
